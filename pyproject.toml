[tool.poetry]
name = "overreact"
version = "1.2.0"
description = "‚öõÔ∏èüìà Create and analyze chemical microkinetic models built from computational chemistry data"
license = "MIT"

authors = [
  "Felipe S. S. Schneider <schneider.felipe@posgrad.ufsc.br>",
  "Giovanni F. Caramori <giovanni.caramori@ufsc.br>",
]

readme = "README.md"

homepage = "https://geem-lab.github.io/overreact-guide/"
documentation = "https://geem-lab.github.io/overreact-guide/"
repository = "https://github.com/geem-lab/overreact"

keywords = [
  "catalysis",
  "chemical-kinetics",
  "chemical-reactions",
  "chemistry",
  "compchem",
  "computational-chemistry",
  "density-functional-theory",
  "gaussian",
  "hartree-fock",
  "microkinetics",
  "orca",
  "quantum-tunneling",
  "reactions",
  "temperature",
  "thermochemistry",
  "thermodynamics",
  "vibrational-entropies",
]

classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Environment :: Console",
  "Intended Audience :: Developers",
  "Intended Audience :: Education",
  "Intended Audience :: Science/Research",
  "Operating System :: OS Independent",
  "Topic :: Education",
  "Topic :: Scientific/Engineering :: Chemistry",
  "Topic :: Software Development :: Libraries :: Python Modules",
]

[tool.poetry.urls]
"API documentation" = "https://geem-lab.github.io/overreact/"

"PyPI" = "https://pypi.org/project/overreact/"

"Bug Tracker" = "https://github.com/geem-lab/overreact/issues"
"Discussions" = "https://github.com/geem-lab/overreact/discussions"

"Citation" = "https://doi.org/10.1002/jcc.26861"

[tool.poetry.scripts]
overreact = 'overreact._cli:main'

[tool.poetry.dependencies]
python = ">=3.8,<3.11"

cclib = "^1"
scipy = "^1.10"

jax = { version = "^0.4", optional = true }
jaxlib = { version = "^0.4", optional = true }
rich = { version = "^13", optional = true }
thermo = { version = "^0.2", optional = true }

[tool.poetry.extras]
cli = ["rich"]
fast = ["jax", "jaxlib"]
solvents = ["thermo"]

[tool.poetry.group.dev.dependencies]
black = { version = ">=23.3,<25.0", extras = ["jupyter"] }
debugpy = "^1"
flynt = ">=0.77,<1.1"
ipython = "^8"
jupyter = "^1.0.0"
matplotlib = "^3"
mypy = ">=0.991,<1.11"
pdoc = ">=12,<15"
perflint = ">=0.7.1,<0.9.0"
pytest = ">=7.2,<9.0"
pytest-cov = ">=4,<6"
ruff = { version = ">=0.0.210,<0.4.5", allow-prereleases = true }
seaborn = ">=0.12,<0.14"
types-setuptools = ">=65,<70"

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core>=1.0.0"]

[tool.ruff]
target-version = "py38"
select = ["ALL"]
# TODO(schneiderfelipe): make this list shorter
ignore = [
  "A002",
  "A003",
  "ANN001", # MissingTypeFunctionArgument
  "ANN002",
  "ANN003",
  "ANN101",
  "ANN201", # MissingReturnTypePublicFunction
  "ANN202", # MissingReturnTypePrivateFunction
  "ANN204",
  "B008",
  "B023",
  "B026",
  "C901",
  "E501",
  "FBT001",
  "FBT002",
  "FBT003",
  "FIX002",
  "G004",
  "N803",
  "N806",
  "NPY002",
  "PLC0208",
  "PLR0912",
  "PLR0913",
  "PLR0915",
  "PLR2004",
  "PLW2901",
  "PTH112",
  "PTH113",
  "PTH118",
  "PTH120",
  "PTH122",
  "PTH123",
  "RET505",
  "RET507",
  "RUF001",
  "S101",   # AssertUsed
  "SLF001",
  "T201",
  "TD003",
]

[tool.ruff.pydocstyle]
convention = "numpy"

[tool.coverage.run]
include = ["overreact/*"]

[tool.coverage.report]
show_missing = true
skip_covered = true
fail_under = 90
sort = "Miss"

[tool.pytest.ini_options]
addopts = "--doctest-modules --doctest-glob=\"*.rst\""
doctest_optionflags = "NORMALIZE_WHITESPACE ELLIPSIS NUMBER"
norecursedirs = ["_build", "examples"]
